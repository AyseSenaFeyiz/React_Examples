{"version":3,"sources":["calculator.js","serviceWorker.js","index.js"],"names":["Square","props","react_default","a","createElement","className","onClick","value","Square2","Board","state","str","result","operator","result1","result2","v","n","this","setState","toString","console","log","concat","parseFloat","_this2","name","handleClick","renderSquare","React","Component","Calculator","calculator_Board","Boolean","window","location","hostname","match","ReactDOM","render","src_calculator","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.20573a2f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\nfunction Square2(props) {\r\n  return (\r\n    <button className=\"square2\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nclass Board extends React.Component {\r\n\r\n  state = {\r\n    str: \"\",\r\n    result: 0,\r\n    operator: \"\",\r\n    result1: 0,\r\n    result2: 0\r\n  }\r\n\r\n  handleClick(v, n) {\r\n\r\n    if (n === \"operator\") {\r\n      if (this.state.operator===\"\" || v===\"=\" ) {\r\n        if (v === \"AC\") {\r\n          this.setState({\r\n            result: 0,\r\n            operator: \"\",\r\n            result1: 0,\r\n            result2: 0,\r\n            str: \"\"\r\n          })\r\n        } else if (v === \"%\") {\r\n          this.setState({\r\n            result: this.state.result1 / 100,\r\n            result1: this.state.result1 / 100,\r\n            operator: \"\",\r\n            str: (this.state.result1 / 100).toString()\r\n          })\r\n        } else if (v === \"+/-\") {\r\n          this.setState({\r\n            result: this.state.result1 * (-1),\r\n            result1: this.state.result1 * (-1),\r\n            operator: \"\",\r\n            str: (this.state.result1 * (-1)).toString()\r\n          })\r\n        } else if (v === \".\") {\r\n  \r\n          var str = this.state.result1.toString();\r\n          console.log(\"str\" + str)\r\n          str.concat(\".\")\r\n          this.setState({\r\n            result: parseFloat(str),\r\n  \r\n          })\r\n        } else if (v === \"+\") {\r\n          this.setState({\r\n            result1: this.state.result1 + this.state.result2,\r\n            result2: 0,\r\n            operator: v,\r\n            str: ((this.state.str).toString()).concat(v)\r\n          })\r\n        } else if (v === \"-\") {\r\n          this.setState({\r\n            result1: this.state.result1 - this.state.result2,\r\n            result2: 0,\r\n            operator: v,\r\n            str: ((this.state.str).toString()).concat(v)\r\n          })\r\n        } else if (v === \"/\") {\r\n          this.setState({\r\n  \r\n  \r\n            operator: v,\r\n            str: ((this.state.str).toString()).concat(v)\r\n          })\r\n        } else if (v === \"x\") {\r\n          this.setState({\r\n            result2: 0,\r\n            operator: v,\r\n            str: ((this.state.str).toString()).concat(v)\r\n  \r\n          })\r\n        } else if (v === \"=\") {\r\n  \r\n          if (this.state.operator === \"+\") {\r\n            this.setState({\r\n              result: this.state.result1 + this.state.result2,\r\n              result1: this.state.result1 + this.state.result2,\r\n              result2: 0,\r\n              str: (this.state.result1 + this.state.result2).toString(),\r\n              operator: \"\"\r\n            })\r\n  \r\n          } else if (this.state.operator === \"-\") {\r\n            this.setState({\r\n              result: this.state.result1 - this.state.result2,\r\n              result1: this.state.result1 - this.state.result2,\r\n              result2: 0,\r\n              str: (this.state.result1 - this.state.result2).toString(),\r\n              operator: \"\"\r\n            })\r\n          } else if (this.state.operator === \"/\") {\r\n            this.setState({\r\n              result: this.state.result1 / this.state.result2,\r\n              result1: this.state.result1 / this.state.result2,\r\n              result2: 0,\r\n              str: (this.state.result1 / this.state.result2).toString(),\r\n              operator: \"\"\r\n            })\r\n          } else if (this.state.operator === \"x\") {\r\n            this.setState({\r\n              result: this.state.result1 * this.state.result2,\r\n              result1: this.state.result1 * this.state.result2,\r\n              result2: 0,\r\n              str: (this.state.result1 * this.state.result2).toString(),\r\n              operator: \"\"\r\n            })\r\n          } else if (this.state.operator === \".\") {\r\n            var str = this.state.result.toString();\r\n            console.log(\"str\" + str)\r\n            str.concat(\".\")\r\n            str.concat(v)\r\n            console.log(\"ek str\" + str)\r\n            this.setState({\r\n              result: parseFloat(str),\r\n  \r\n            })\r\n          }\r\n        }\r\n        console.log(this.state)\r\n\r\n      }\r\n      \r\n    } else if (n === \"number\") {\r\n      console.log(\"number\")\r\n      if (this.state.operator === \"\") {\r\n        this.setState({\r\n          result1: this.state.result1 * 10 + v,\r\n          str: this.state.str.concat(v)\r\n        })\r\n\r\n      }\r\n      else {\r\n        this.setState({\r\n          result2: this.state.result2 * 10 + v,\r\n          str: (this.state.str).concat(v)\r\n        })\r\n      }\r\n      console.log(this.state)\r\n    }\r\n  }\r\n\r\n  renderSquare(v, n) {\r\n\r\n    if (n === \"operator\") {\r\n      return <Square2 value={v} name={n}\r\n        onClick={() => this.handleClick(v, n)}\r\n      />;\r\n    } else {\r\n      return <Square value={v} name={n}\r\n        onClick={() => this.handleClick(v, n)}\r\n      />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const result = 'Result: ' + this.state.result;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"status\" >{this.state.str}</div>\r\n        <div className=\"status\" >{result}</div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(\"AC\", \"operator\")}\r\n          {this.renderSquare(\"+/-\", \"operator\")}\r\n          {this.renderSquare(\"%\", \"operator\")}\r\n          {this.renderSquare(\"/\", \"operator\")}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(7, \"number\")}\r\n          {this.renderSquare(8, \"number\")}\r\n          {this.renderSquare(9, \"number\")}\r\n          {this.renderSquare(\"x\", \"operator\")}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(4, \"number\")}\r\n          {this.renderSquare(5, \"number\")}\r\n          {this.renderSquare(6, \"number\")}\r\n          {this.renderSquare(\"-\", \"operator\")}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(1, \"number\")}\r\n          {this.renderSquare(2, \"number\")}\r\n          {this.renderSquare(3, \"number\")}\r\n          {this.renderSquare(\"+\", \"operator\")}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(\"\", null)}\r\n          {this.renderSquare(0, \"number\")}\r\n          {this.renderSquare(\"\", null)}\r\n          {this.renderSquare(\"=\", \"operator\")}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Calculator extends React.Component {\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"calculator\">\r\n        <div className=\"calculator-board\">\r\n\r\n          <Board />\r\n        </div>\r\n        <div className=\"calculator-info\">\r\n          <div>{/* status */}</div>\r\n          <ol>{/* TODO */}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './calculator.css';\nimport Calculator from './calculator';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}